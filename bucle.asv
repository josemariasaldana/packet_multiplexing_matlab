%este programa necesita que exista una carpeta con el nombre del juego y el número de jugadores, para cada número de jugadores a probar:
% \quake2_5\
% \quake2_10\
% etc.
%
%en cada carpeta debe haber un fichero llamado quake2_5_time_size_user.txt
%ese fichero tiene tres columnas: tiempo absoluto de generación del paquete
%en useg; tamaño del payload UDP (sin contar cabecera IP ni UDP) y número
%de usuario que lo genera
%
%las pruebas se realizan para
%   una versión de IP: v4 o v6
%   un juego
%   un número máximo de paquetes a multiplexar
%   un tamaño máximo de paquete
%   bucles anidados:
%       un rango de números de jugadores
%           un rango de tiempos de PERIOD o TIMEOUT (sólo varía uno de los dos parámetros)

%el programa genera los siguientes ficheros:
%
%   para cada número de jugadores, en la carpeta con el nombre del juego seguido por el número de jugadores:
%       quake2_5_size.txt       tamaños de los payload UDP de los paquetes
%       quake2_5_diftime.txt    diferencias de tiempos entre paquetes en useg
%
%       quake2_5_histogramas_tiempo_entrada.txt
%       quake2_5_histogramas_tamano_entrada.txt
%
%       fichero ...._bucle.txt   contiene en cada columna un valor de TIMEOUT o PERIOD. Se puede pegar en excel una vez cambiados los puntos por comas
%       
%       para cada valor de TIMEOUT o PERIOD
%               fichero ..._size.txt            tamaños de los paquetes generados
%               fichero ..._diftime.txt         diferencias de tiempo entre paquetes generados
%               fichero ..._estadisticas.txt    estadisticas de ese valor
%
%               quake2_5_histograma_retention_PE_10_TO_10_NP_300_TH_1350.txt
%               quake2_5_histogramas_tamano_salida_PE_5_TO_5_NP_300_TH_1350.txt
%               quake2_5_histogramas_tiempo_salida_PE_5_TO_5_NP_300_TH_1350.txt

close all
clear all

%%%%%%%%%%%%%%%%%% CONSTANTES %%%%%%%%%%%%%%%%%%
IPv4_HEADER = 20 ; %cabecera IPv4/UDP
IPv6_HEADER = 40 ; %cabecera IPv6/UDP
UDP_HEADER = 8;
L2TP_HEADER = 4;
PPP_HEADER = 1;
PPPMux_HEADER = 2;
IPv4_COMPR_HEADER = 2; %cabecera comprimida IPv4
IPv6_COMPR_HEADER = 2; %cabecera comprimida IPv6
UDP_COMPR_HEADER = 2; %cabecera comprimida UDP
ETH_HEADER=12; %tamaño en bytes de la cabecera ethernet

%%%%%%%%%%%%%%%% PARAMETROS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%% versión de IP que se usa %%%%%%
%elegir sólo una
%IP_version = 4;
IP_version = 6;

%%%%%%%%%%%%%%% JUEGO QUE SE USA %%%%%%%%%%%%%%%
%elegir sólo uno
%nombre_juego = 'hlcs_1_dedust';
%nombre_juego = 'hl2cs_dedust';
%nombre_juego = 'halo2';
%nombre_juego = 'quake2';
%nombre_juego = 'quake3';
%nombre_juego = 'quake4';
%nombre_juego = 'etpro_1_fueldump';
nombre_juego = 'unreal1.0';

%%%%%%%%%%%%%% NUMERO JUGADORES %%%%%%%%%%%%%%%%%%%%%
%las pruebas se realizan para un rango de números de jugadores
num_jugadores_inicial = 5;
num_jugadores_final = 20;
paso_num_jugadores = 5;

%para seleccionar la política PERIOD o TIMEOUT, ir al comienzo del bucle

%Valores de PERIOD O TIMEOUT que voy a probar en este bucle
minimo=5000; %el primer valor a calcular. Debe ser múltiplo de "paso"
maximo=50000; %el último valor a calcular. Debe ser múltiplo de "paso"
paso=5000; %useg 

%parte que se refiere a PE y TO del nombre del fichero de
%estadísticas del bucle para cada número de jugadores
%rellenarlo a mano para que sea coherente con el Numero de jugadores y el
%rango de PERIOD o TIMEOUT
nombre_fichero_estadisticas_bucle='_PE_de_5_a_50_TO_como_PE';

%Valores de número máximo de paquetes o tamaño
NUMPAQUETES=300;   %numero maximo de paquetes a agrupar
PACKET_SIZE_TRESHOLD=1350;  %numero de bytes maximos del paquete. Cuando se supera, envía

%definir si se quieren sacar por pantalla los histogramas
%poner a 1 si se quieren ver, y a 0 si no se quieren ver
histogramas_por_pantalla = 0;


%%%%%%%%%%%%%%%%%% FIN PARAMETROS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%añado al nombre del juego 'IPv6' si los cálculos son para IPv6
if(IP_version == 6) 
    nombre_juego = strcat(nombre_juego,'_IPv6');
end

%%%%%%%%%%%% CALCULO TAMAÑOS CABECERAS %%%%%%%%%%%%%%%%%%

if IP_version == 4 %se usa IPv4 
    IP_UDP_HEADER = IPv4_HEADER + UDP_HEADER;
    COMMON_HEADER = IPv4_HEADER + L2TP_HEADER + PPP_HEADER;
    COMPR_HEADER = IPv4_COMPR_HEADER + UDP_COMPR_HEADER;
else %se usa IPv6
    IP_UDP_HEADER = IPv6_HEADER + UDP_HEADER;
    COMMON_HEADER = IPv6_HEADER + L2TP_HEADER + PPP_HEADER;
    COMPR_HEADER = IPv4_COMPR_HEADER + UDP_COMPR_HEADER;
end


%%%%%%%%%%%%%% DEFINIR VARIABLE ESTADISTICAS %%%%%%%%%%%%%%%%%%

numero_estadisticas = 30;
%matriz para almacenar las estadísticas
%cada columna es un valor de PERIOD o TIMEOUT
%defino el número máximo de paquetes a multiplexar que voy a almacenar en
%las estadísticas
numero_maximo_paquetes_estadisticas = 20;

%hay numero_estadisticas estadísticas de salida, aparte del número de paquetes multiplexados
tamano_estadisticas = numero_estadisticas + numero_maximo_paquetes_estadisticas;

for num_jugadores=num_jugadores_inicial:paso_num_jugadores:num_jugadores_final
%%%%%%%%%%% Política PERIOD_TIMEOUT %%%%%%%%%%%%

    %reinicio las estadísticas
    estadisticas=[];
        
    %para cada valor del número de jugadores
    nombre_archivos=strcat('.\',nombre_juego,'_',num2str(num_jugadores),'\',nombre_juego,'_',num2str(num_jugadores))

    %para cada valor de PERIOD o TIMEOUT desde paso*minimo hasta paso*maximo
    %cada valor añade una columna a estadisticas

    for y=minimo/paso:maximo/paso
        %PERIOD significa que en cuanto pasa ese tiempo se envía lo que
        %haya
        
        
        %para hacer política PERIOD pura igualo TIMEOUT y PERIOD
        PERIOD = paso*y
        TIMEOUT=PERIOD

        %para hacer política TIMEOUT pura hago PERIOD mucho mayor que TIMEOUT. Así sólo importa TIMEOUT
        %TIMEOUT = paso*y
        %PERIOD=20*TIMEOUT
        

        
        cargar_variables
        comprimir
        multiplexar_period_timeout
        guardar_estadisticas
        
        %Calculamos y dibujamos el histograma del retention time
        eje_x=0:100:PERIOD;
        
        %si se ha decido que los histogramas salgan por pantalla
        if histogramas_por_pantalla ==1
            figure; %crea otra ventana
            hist(entrada(:,6),eje_x);
        end
        histograma_retention_salida=hist(entrada(:,6),eje_x);
    
        %escribo el histograma_retention en un fichero, para poder pegarlo directamente en excel
        file_histograma_retention_salida = fopen(strcat(nombre_archivos,'_histograma_retention_PE_',num2str(PERIOD/1000),'_TO_',num2str(TIMEOUT/1000),'_NP_',num2str(NUMPAQUETES),'_TH_',num2str(PACKET_SIZE_TRESHOLD),'.txt'),'w');
        for(u=1:length(histograma_retention_salida))
            fprintf(file_histograma_retention_salida,strcat(num2str(eje_x(u)),'\t'));
            fprintf(file_histograma_retention_salida,strcat(num2str(histograma_retention_salida(u)),'\n'));
        end
        fclose(file_histograma_retention_salida);
    
        %calculamos los percentiles
        prctile(entrada(:,6),[95,99,99.5,99.9,100])
    
        %%%%%%%%histograma de tiempos y tamaños de salida
        
        %creo la primera columna con los tiempos del histograma de tiempos
        eje_x_tiempo=0:200:max(max(salida(:,4))); %max calcula una línea, no un valor
        histograma_tiempo_salida=zeros(length(eje_x_tiempo),2);
        histograma_tiempo_salida(:,1)=eje_x_tiempo;

        %creo la primera columna con los tiempos del histograma de tamaños
        eje_x_tamano=0:10:max(max(salida(:,2)));
        histograma_tamano_salida=zeros(length(eje_x_tamano),2);
        histograma_tamano_salida(:,1)=eje_x_tamano;

        histograma_tiempo_salida (:,2)= hist(salida(:,4),eje_x_tiempo);
        histograma_tamano_salida (:,2)= hist(salida(:,2),eje_x_tamano);

        %al acabar con todos los valores, escribo la matriz de histogramas en un
        %fichero, para poder pegarlo directamente en excel
       
        file_histogramas_tiempo_salida = fopen(strcat(nombre_archivos,'_histogramas_tiempo_salida_PE_',num2str(PERIOD/1000),'_TO_',num2str(TIMEOUT/1000),'_NP_',num2str(NUMPAQUETES),'_TH_',num2str(PACKET_SIZE_TRESHOLD),'.txt'),'w');
        for(i=1:size(histograma_tiempo_salida,1))
            for u=1:2
                fprintf(file_histogramas_tiempo_salida,strcat(num2str(histograma_tiempo_salida(i,u)),'\t'));
            end
            fprintf(file_histogramas_tiempo_salida,'\n');
        end
        fclose(file_histogramas_tiempo_salida);

        %al acabar con todos los valores, escribo la matriz de histogramas en un
        %fichero, para poder pegarlo directamente en excel
        file_histogramas_tamano_salida = fopen(strcat(nombre_archivos,'_histogramas_tamano_salida_PE_',num2str(PERIOD/1000),'_TO_',num2str(TIMEOUT/1000),'_NP_',num2str(NUMPAQUETES),'_TH_',num2str(PACKET_SIZE_TRESHOLD),'.txt'),'w');
        for i=1:size(histograma_tamano_salida,1)
            for u=1:size(histograma_tamano_salida,2)
                fprintf(file_histogramas_tamano_salida,strcat(num2str(histograma_tamano_salida(i,u)),'\t'));
            end
            fprintf(file_histogramas_tamano_salida,'\n');
        end
        fclose(file_histogramas_tamano_salida);
    end

    %al acabar con todos los valores, escribo la matriz estadísticas en un
    %fichero, para poder pegarlo directamente en excel
    file_estadisticas_bucle = fopen(strcat(nombre_archivos,nombre_fichero_estadisticas_bucle,'_NP_',num2str(NUMPAQUETES),'_TH_',num2str(PACKET_SIZE_TRESHOLD),'_bucle.txt'),'w');
    %file_estadisticas_bucle = fopen(strcat(nombre_archivos,'_PE_TO_estadis_bucle_',num2str(minimo),'_',num2str(maximo),'_NP_',num2str(NUMPAQUETES),'_TH_',num2str(PACKET_SIZE_TRESHOLD),'.txt'),'w');

    %para cada fila
    for h=1:tamano_estadisticas
        %para cada columna
        for g=1:size(estadisticas,2)
            fprintf(file_estadisticas_bucle,strcat(num2str(estadisticas(h,g)),'\t'));
        end
        %salto de línea después de cada fila
        fprintf(file_estadisticas_bucle,'\n');
    end
    fclose(file_estadisticas_bucle);


end

